<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd" default-autowire="byName" default-lazy-init="true">
	<!-- JDBC 配置 --> 
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 选择任意节点的参与人 --> 
	<bean name="bpmCoreExecutionService" class="com.hundsun.jres.workflow.core.internal.impl.BpmCoreExecutionServiceImpl"></bean>
	
<!-- 数据源设置 -->
<!-- JNDI，注意：使用JNDI需要把JDBC Driver拷贝到服务器的lib目录 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	<property name="jndiName">
	<value>java:comp/env/workflow</value>
	</property>
	</bean>
-->	
<!-- C3P0 -->
<bean id="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource"      destroy-method="close"> 
        <property name="driverClass"> 
            <value>${jdbc.driver}</value> 
        </property> 
        <property name="jdbcUrl"> 
            <value>${jdbc.url}</value> 
        </property> 
        <property name="user"> 
            <value>${jdbc.username}</value> 
        </property>
        <property name="password"> 
            <value>${jdbc.password}</value> 
        </property> 
    <!--连接池中保留的最小连接数。--> 
        <property name="minPoolSize"> 
            <value>5</value> 
        </property> 
    <!--连接池中保留的最大连接数。Default: 15 --> 
        <property name="maxPoolSize"> 
            <value>30</value> 
        </property> 
   <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
        <property name="initialPoolSize"> 
            <value>10</value> 
        </property> 
    <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
        <property name="maxIdleTime"> 
            <value>60</value> 
        </property> 
    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --> 
        <property name="acquireIncrement"> 
            <value>5</value> 
        </property> 
    <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 
                属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
               如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0--> 
        <property name="maxStatements"> 
            <value>0</value> 
        </property> 
    <!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
        <property name="idleConnectionTestPeriod"> 
            <value>60</value> 
        </property> 
    <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
        <property name="acquireRetryAttempts"> 
            <value>30</value> 
        </property> 
    <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 
         保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
        获取连接失败后该数据源将申明已断开并永久关闭。Default: false--> 
        <property name="breakAfterAcquireFailure"> 
            <value>false</value> 
        </property> 
    <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 
            时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
             等方法来提升连接测试的性能。Default: false --> 
        <property name="testConnectionOnCheckout"> 
            <value>false</value> 
        </property> 
    </bean> 
	<!-- 不同数据库连接需要配置不一样，比如dbcp、c3p0、weblogic和WebSphere的连接池，否则处理clob和blob字段会出错 -->
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor" lazy-init="true" />
	
	<!-- oracle 9i专用 -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
	</bean>
	
	<!-- 除oracle9i外的数据库适用 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true" />
	

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" lazy-init="false">
		<!-- oracle 9i必须使用oracleLobHandler，别的数据库用lobHandler-->
		<property name="lobHandler" ref="lobHandler"/>
		<property name="dataSource" ref="dataSource"/>


		<property name="mappingJarLocations">
			<list>
				<!-- 工作流默认配置，不能删除 start-->
				<value>WEB-INF/lib/com.hundsun.jres.workflow.*.jar</value>
				<!-- 工作流默认配置，不能删除 end-->
             	
             	<!-- 用户资源列表在此处添加 -->
			</list>
		</property>

		<property name="packagesToScan">
			<list>
				<!-- 工作流默认配置，不能删除 start-->
				<!-- 工作流默认配置，不能删除 end-->
             	
             	<!-- 用户资源列表在此处添加 -->
				<value>com.hundsun.jres.workflow.example.securities</value>
			</list>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<!-- oracle9i方言:org.hibernate.dialect.Oracle9iDialect -->
				<!-- oracle10g方言:org.hibernate.dialect.Oracle10gDialect -->
				<!-- db2方言:org.hibernate.dialect.DB2Dialect -->
				<!-- sqlserver方言:org.hibernate.dialect.SQLServerDialect -->	
				<!-- derby方言org.hibernate.dialect.DerbyDialect-->
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.default_schema">app</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.connection.SetBigStringTryClob">true</prop>
				<prop key="hibernate.show_sql">true</prop>    <!-- 是不是打印出sql语句 -->
				<prop key="hibernate.format_sql">true</prop>    <!-- 是否对打印出来的sql语句格式化 -->
				<prop key="hibernate.jdbc.batch_size">50</prop> <!-- 批量提交的时候最大记录数 -->
				<prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
			</props>
		</property>
 
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="hibernateTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"/>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 工作流默认配置，不能删除 start-->
			<tx:method name="query*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="list*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="fetch*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="count*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="is*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="exists*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="createTaskQuery" read-only="true" propagation="SUPPORTS"/>
			<!-- 统计流程信息 com.hundsun.jres.workflow.impl.monitor.service.ProcessMonitorServiceImpl，如果使用事务则在流程异常时无法完成统计 -->
			<tx:method name="summary*" propagation="NEVER"/>
			<tx:method name="*" rollback-for="Throwable"/>
			<!-- 工作流默认配置，不能删除 end-->
             	
        	<!-- 用户资源列表在此处添加 -->
			
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 工作流默认配置，不能删除 start-->
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.hundsun.jres.workflow.impl..*.*service.*Service*.*(..)) 
			or execution(* com.hundsun.bpm.base.jbpm.exp..*.*service.*Service*.*(..))
			or execution(* com.hundsun.jres.workflow.service.*Service*.*(..))" />
		<aop:pointcut id="daoOperation" expression="execution(* com.hundsun.jres.workflow.impl..*.*Dao*.*(..))"/>
		<aop:advisor id="managerTx" advice-ref="txAdvice" pointcut-ref="serviceOperation" />
		<!-- 工作流默认配置，不能删除 end-->
             	
        <!-- 用户资源列表在此处添加 -->
	</aop:config>
	<!-- Enable @AspectJ support -->
  	<aop:aspectj-autoproxy />
  	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="bpmConfig" class="com.hundsun.jres.workflow.core.internal.api.BpmConfig">
		<!-- 查看待办任务的模板配置 “恒生信托综合业务平台”不需要使用模板 -->
		<property name="viewTaskTemplateUrl" value="/workflow/client/showReadOnlyTask.mw"></property>
		<!--  选择下一个节点处理人时是否显示自己  -->
		<property name="assigneeNextToSelf" value="false"></property>
	</bean>
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
     <property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="dbBean" class="com.hundsun.jres.impl.dbspring.util.DBBean">
		<property name="dbBeanMap">
			<map>
				<entry key="bpm" value-ref="ds1"></entry>
			</map>
		</property>
	</bean>
		
	<bean id="ds1" class="com.hundsun.jres.impl.dbspring.util.DBNodeBean">
		<property name="datasource" ref="dataSource" />
		<property name="enable" value="true" />
		<property name="type" value="c3p0" />
		<property name="defaultDataSource" value="true" />
		<property name="mapping" value="alias" />
		<property name="dialect" value="derby" />
		<property name="dbType" value="type-derby" />
		<property name="cursor" value="true" />
		<property name="scroll" value="false" />
		<property name="autoRollback" value="true" />
		<property name="startMonitor" value="false" />
		<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
		<property name="fetchSize" value="100" />
		<property name="cutOrderby" value="true" />
		<property name="transactionIsolation" value="read_committed" />
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="transactionTemplate" ref="transactionTemplate" />
		<property name="autoConnect" value="true" />
	</bean>	
</beans>