<?xml version="1.0" encoding="UTF-8"?>

<hsdoc version="1.1.0">
  <Windows>
    <control-Window title="选择组织" height="392" name="Window1" draggable="true" width="353">
      <Top/>
      <Bottom/>
      <Left/>
      <Right/>
      <layout-fit>
        <control-Panel collapsible="true" height="200" name="Panel1" width="231">
          <Top/>
          <Bottom>
            <control-ButtonGroup name="ButtonGroup1">
              <layout-buttonGroup>
                <control-Button name="Button1" text="确定" width="75" tabIndex="1" icon="bizframe/images/icons/accept.png"/>
                <control-Button name="Button2" text="取消" width="75" tabIndex="1" icon="bizframe/images/icons/cross.gif"/>
              </layout-buttonGroup>
            </control-ButtonGroup>
          </Bottom>
          <Left/>
          <Right/>
          <layout-border>
            <control-Panel region="north" height="52" name="Panel2" width="100">
              <Top/>
              <Bottom/>
              <Left/>
              <Right/>
              <layout-table columns="1" fullWidth="true" cellspacing="6">
                <control-DictComboBox defaultValue="0" labelAlign="right" labelWidth="75" fieldName="dimension" displayMode="true" width="239" fieldLabel="组织维度" name="dimensionCBox" group="BIZ_ORG_DIMEN"/>
              </layout-table>
            </control-Panel>
            <control-Tree region="center" height="100" selectModel="multipleSelect" name="OrgTree" width="100">
              <layout-tree>
                <control-AsyncTreeNode id="bizroot" dataSet="findOrgTreeDataSet" name="AsyncTreeNode1" text="组织" checked="false">
                  <layout-tree/>
                </control-AsyncTreeNode>
              </layout-tree>
              <Top>
                <control-Toolbar name="Toolbar1">
                  <layout-toolbar>
                    <control-Button name="expandButton" text="展开" width="75" tabIndex="1" icon="bizframe/images/icons/arrow_out.png"/>
                    <control-Button name="closeButton" text="收缩" width="75" tabIndex="1" icon="bizframe/images/icons/arrow_in.png"/>
                    <control-Button name="resetButton" text="刷新" width="75" icon="bizframe/images/icons/refresh.png" tabIndex="1"/>
                  </layout-toolbar>
                </control-Toolbar>
              </Top>
              <Bottom/>
              <Left/>
              <Right/>
            </control-Tree>
          </layout-border>
        </control-Panel>
      </layout-fit>
    </control-Window>
  </Windows>
  <Accessory>
    <control-TreeDataSet start="start" name="findOrgTreeDataSet" service="bizframe.authority.organization.finSubOrg" limit="limit" usingServiceName="true" window="Window1">
      <params>
        <param name="resCode"><![CDATA["bizOrgSet"]]></param>
        <param name="opCode"><![CDATA["bizOrgFindFromCache"]]></param>
      </params>
      <fields>
        <field name="org_id" type="String" mapping="id"/>
        <field name="org_code" type="String" mapping=""/>
        <field name="org_name" type="String" mapping="text"/>
        <field name="org_cate" type="String" mapping=""/>
        <field name="dimension" type="String" mapping=""/>
        <field name="parent_id" type="String" mapping="pid"/>
        <field name="manage_id" type="String" mapping=""/>
        <field name="org_level" type="String" mapping=""/>
        <field name="leaf" type="String" mapping="leaf"/>
      </fields>
    </control-TreeDataSet>
  </Accessory>
  <WindowScripts>
    <WindowScript window="Window1"><![CDATA[remote bizframe.authority.organization.findOrgService   as findOrgSvc;

private orgRoot="bizroot";
private _rootName='';
private orgDimension='0';

private params=null;
private selectIds=[];
private selectNames=[];
private flag=false;
private orgName=null;
private dimensionNotChange=false;

private	tOrgParentId="";
private	tOrgParentName="";

public function rec(obj){
	params=obj;
	if(obj[0] && obj[0].getValue()){
		selectIds=obj[0].getValue().split(",");//已经选中的id
	}
	if(obj[1] && obj[1].getValue()){
		selectNames=obj[1].getValue().split(",");//已经选中的name
	}
	if(obj[2]){
		flag=obj[2];
	}

	if(obj[4]){
		dimensionNotChange=obj[4];
		if(dimensionNotChange){
			dimensionCBox.setEnabled(false);
		}else{
			dimensionCBox.setEnabled(true);
		}
	}else{
			dimensionCBox.setEnabled(true);
	}
}


private function contains(selects,value){
    if(selects){
    	for(var i=0;i<selects.length;i++){
			if(value==selects[i]){
			   return true;
			}
	    }
	}
	return false;
}
private function addSelected(selects,value){
	if(contains(selects,value)){
		return;
	}
	selects.push(value);
}
private function deleteSelected(selects,value){
    if(selects)
	for(var i=0;i<selects.length;i++){
		if(value==selects[i]){
		   selects.splice(i,1);
		   return;
		}
	}
}

//展开
event expandButton_click(Button thisComp, Ext.EventObject e) {
	//OrgTree.root.expand(true,false);
	if(tOrgParentId==''){
    	Ext.Msg.alert('提示','请先选择所属组织');
    	return;
    }
    var selectNode=OrgTree.getNodeById(tOrgParentId);
   	if(!selectNode){
   		Ext.Msg.alert('提示','请刷新');
   		return;
   	}
    findOrgTreeDataSet.setParams({isSynTree : true});
	selectNode.reload();
	selectNode.expand(true,false);
}
//收缩
event closeButton_click(Button thisComp, Ext.EventObject e) {
	//OrgTree.root.collapse(true,false);
	if(tOrgParentId==''){
    	Ext.Msg.alert('提示','请先选择所属组织');
    	return;
    }
    OrgTree.getNodeById(tOrgParentId).collapse(true,false);
}
//刷新
event resetButton_click(Button thisComp, Ext.EventObject e) {
    tOrgParentId='';
	tOrgParentName='';
    OrgTree.collapseAll();
	initRoot();
	//xujin 20120518 BUG #2926::所属组织选择窗口中，点击刷新按钮，会出现两个“正在处理，请稍后”的提示框 begin
	//OrgTree.getNodeById(orgRoot).reload();
	//xujin 20120518 BUG #2926::所属组织选择窗口中，点击刷新按钮，会出现两个“正在处理，请稍后”的提示框 end
}

event OrgTree_click(Node node, EventObject e) {
	tOrgParentId=node.id;
	tOrgParentName=node.text;
	
	if(!node.attributes.checked){
		if(flag){
			var c=OrgTree.getChecked();
			if(c){
				for(var i=0;i<c.length;i++){
					OrgTree.setChecked(c[i],false);
				}
			}
			selectIds=[];
			selectNames=[];
		}
		addSelected(selectIds,node.id);
		addSelected(selectNames,node.text);
		orgName=node.text;
	}else{
		deleteSelected(selectIds,node.id);
		deleteSelected(selectNames,node.text);
	}
}
event OrgTree_expandnode(Node node) {
	var nodes=node.childNodes;
	if(nodes){
		for(var i=0;i<nodes.length;i++){
			if(contains(selectIds,nodes[i].id)){
				OrgTree.setChecked(nodes[i],true);
			}
		}
	}
}

event dimensionCBox_select(Hs.HsCheckCombo combo, Ext.data.Record record, Number index) {
	orgDimension=record.get('dictItemCode');
	findOrgTreeDataSet.setParams({dimension: orgDimension });
	OrgTree.getNodeById(orgRoot).reload();
}

function initRoot(){
	var obj = {"parent_id":"bizroot","resCode":"bizOrgSet","opCode":"bizOrgFind"};
	var succ = function(response, options){
	        var returnCode="";
	        var errorInfo="";
			if(typeof response == 'object'){
					returnCode = response.returnCode;
					errorInfo =  response.errorInfo;
			}
			if(returnCode=='0'){
			         var root = OrgTree.getNodeById(orgRoot);
                     orgRoot=response.dataSetResult[0].data[0].org_id;
                     root.setId(orgRoot);
                     _rootName=response.dataSetResult[0].data[0].org_name;
                     root.setText(_rootName);
                     if(contains(selectIds,orgRoot)){
						OrgTree.setChecked(root,true);
					//xujin 20120518 BUG #2926::所属组织选择窗口中，点击刷新按钮，会出现两个“正在处理，请稍后”的提示框 begin	
					OrgTree.getNodeById(orgRoot).reload();
					//xujin 20120518 BUG #2926::所属组织选择窗口中，点击刷新按钮，会出现两个“正在处理，请稍后”的提示框 end
			}
			}else{
				   Ext.Msg.alert("提示",errorInfo);
			}
		};
	var fail = function(response, options){
				   Ext.Msg.alert('提示',response.errorInfo);
	};
	findOrgSvc.asynExecute(obj,succ,fail);	
}

event Window1_complete() {
    if(params[3]){//组织维度
	    orgDimension=params[3].getValue();
	    dimensionCBox.setValue(orgDimension);
    }
	findOrgTreeDataSet.setParams({dimension: orgDimension });
	initRoot();
}
//确定
event Button1_click(Button thisComp, Ext.EventObject e) {
	params[0].setValue(selectIds.toString());
	params[1].setValue(selectNames.toString());
	close();
}
//取消
event Button2_click(Button thisComp, Ext.EventObject e) {
	close();
}
event OrgTree_beforeload(Node node) {
    findOrgTreeDataSet.setParams({isSynTree : true});
}
]]></WindowScript>
  </WindowScripts>
</hsdoc>
