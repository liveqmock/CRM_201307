<?xml version="1.0" encoding="UTF-8"?>
<metadata:ConstantList xmlns:metadata="http://www.hundsun.com/ares/studio/jres/metadata/1.0.0">
  <operations title="导出JAVA常量声明类" code="importPackage(java.lang);&#xA;importPackage(java.io);&#xA;importPackage(java.util);&#xA;importPackage(org.eclipse.jface.dialogs);&#xA;&#xA;var begin = &#xA;&quot;\n&quot; +&#xA;&quot;public class Constant {\n&quot;;&#xA;&#xA;var end = &#xA;&quot;}\n&quot;;&#xA;&#xA;var path = &quot;constant&quot;;&#xA;var project = res.getARESProject().getProject();&#xA;var resource = util.getSrcFolder(project).getFile(&quot;constant\\Constant.java&quot;);&#xA;var fileName = resource.getLocation().toOSString();&#xA;&#xA;var metadataUtil = classLoader.loadClass(&quot;com.hundsun.ares.studio.jres.model.metadata.util.MetadataUtil&quot;).newInstance();&#xA;var stringUtil = classLoader.loadClass(&quot;org.apache.commons.lang.StringUtils&quot;).newInstance();&#xA;&#xA;var sb = new StringBuffer();&#xA;var errorLogInfo = new StringBuffer();//错误提示信息&#xA;var warninginfo = &quot;false&quot;;//源文件为空预检查&#xA;&#xA;var exception = &quot;false&quot;;//捕获循环引用异常&#xA;&#xA;sb.append(&quot;package &quot;+path+&quot;;\n&quot;);&#xA;sb.append(&quot;import java.util.Date;\n&quot;);&#xA;sb.append(begin);&#xA;sb.append(&quot;\n&quot;);&#xA;getAllConstants(sb);&#xA;sb.append(end);&#xA;&#xA;var status = util.genFile(fileName, sb.toString(),  errorLogInfo.toString(), &quot;utf-8&quot;, true);&#xA;&#xA;if(warninginfo.equals(&quot;true&quot;)){//预检查源文件内容是否为空&#xA;&#x9;MessageDialog.openWarning(null,&quot;警告&quot;, &quot;源文件内容为空，请填写后再进行操作！&quot;);&#xA;}else{&#xA;&#x9;&#xA;&#x9;if(exception.equals(&quot;true&quot;)){//捕获循环引用的异常&#xA;&#x9;&#x9;MessageDialog.openError(null,&quot;错误信息提示&quot;, &quot;需要生成Java文件的源文件中存在循环引用&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;}else{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (!status.isOK()) {&#xA;&#x9;&#x9;&#x9;MessageDialog.openError(&quot;生成失败&quot;, status.getMessage());&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;if(errorLogInfo.toString().equals(&quot;&quot;)){&#xA;&#x9;&#x9;&#x9;&#x9;resource.refreshLocal(0, null);&#xA;&#x9;&#x9;&#x9;&#x9;MessageDialog.openInformation(null,&quot;生成成功&quot;, &quot;文件生成完毕！生成路径：&quot; + fileName);&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;resource.refreshLocal(0, null);&#xA;&#x9;&#x9;&#x9;&#x9;MessageDialog.openWarning(null,&quot;生成成功但源文件存在错误&quot;, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;文件生成完毕！生成路径：&quot; +fileName+&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;\n\n&quot;+&quot;需导出JAVA常量声明类的源文件中存在如下错误：\n&quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo + &quot;\n\n其余信息已正常生成相应文件&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&#xA;function getAllConstants(sb){&#xA;&#x9;&#xA;&#x9;var constantItem = info.getItems().size();&#xA;&#x9;&#xA;&#x9;if(constantItem == 0){&#xA;&#x9;&#x9;warninginfo = &quot;true&quot;;//源文件为空改变警告信息值&#xA;&#x9;}else{&#xA;&#x9;&#x9;for(var i = 0 ; i &lt; constantItem ; i++){&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;var constItem = metadataUtil.decrypt(info.getItems().get(i), res);&#xA;&#x9;&#x9;&#x9;var constDesc = constItem.getDescription();//备注信息&#xA;&#x9;&#x9;&#x9;var constName = constItem .getName();//常量ID&#xA;&#x9;&#x9;&#x9;var refId = info.getItems().get(i).getRefId();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;var j = i+1;&#xA;&#xA;&#x9;&#x9;&#x9;//1、先判断用户常量ID是否为空&#xA;&#x9;&#x9;&#x9;//2、然后判断是否存在引用&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constName)){&#xA;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：当前资源第[&quot;+j+&quot;]条记录ID为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：当前资源第[&quot;+j+&quot;]条记录ID为空\n&quot;);&#xA;&#x9;&#x9;&#x9;}else {&#xA;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(refId)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var constValue = constItem .getValue();//常量值&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var constLen = constItem.getLength();//长度&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var constpre = constItem.getPrecision();//精度&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var constDataType = constItem.getDataType();//标准数据类型&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var constDataTypeId = constItem.getDataTypeId();//标准数据类型&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constDataTypeId)){ //判断引用的标准数据类型是否为空&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：用户常量ID为[&quot;+constName+&quot;]引用的标准数据类型为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：用户常量ID为[&quot;+constName+&quot;]引用的标准数据类型为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constType = constDataType.getRealType(&quot;java&quot;, constLen, constpre);// 获取对应的标准数据类型的真实的Java数据类型&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constValue) ){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：用户常量ID为[&quot;+constName+&quot;]的常量值为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：用户常量ID为[&quot;+constName+&quot;]的常量值为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constType)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：用户常量ID为[&quot;+constName+&quot;]的标准数据类型无对应真实JAVA数据类型\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：用户常量ID为[&quot;+constName+&quot;]的标准数据类型无对应真实JAVA数据类型\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(constType.equals(&quot;String&quot;)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\&quot;&quot; + constValue + &quot;\&quot;&quot; + &quot;;&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(constType.equals(&quot;Date&quot;)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;new Date(\&quot;&quot; + constValue + &quot;\&quot;);&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constValue + &quot;;&quot;);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;try{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constRefItem = metadataUtil.decrypt(info.getItems().get(i), res);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(constRefItem != null){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constName = constRefItem.first.getName();//常量ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constValue = constRefItem.first.getValue();//常量值&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constLen = constRefItem.first.getLength();//长度&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constpre = constRefItem.first.getPrecision();//精度&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constDataType = constRefItem.first.getDataType();//标准数据类型&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constDataType)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：用户常量ID为[&quot;+constName+&quot;]引用的标准数据类型为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：用户常量ID为[&quot;+constName+&quot;]引用的标准数据类型为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constType = constDataType.getRealType(&quot;java&quot;, constLen, constpre);// 获取实际的Java数据类型&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(stringUtil.isBlank(constValue) ){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：用户常量ID为[&quot;+constName+&quot;]的常量值为空\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：用户常量ID为[&quot;+constName+&quot;]的常量值为空\n&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(constType.equals(&quot;String&quot;)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\&quot;&quot; + constValue + &quot;\&quot;&quot; + &quot;;&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(constType.equals(&quot;Date&quot;)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;new Date(\&quot;&quot; + constValue + &quot;\&quot;);&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\tpublic static final &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constType + &quot;  &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constName + &quot; = &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(constValue + &quot;;&quot;);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t// &quot; + constDesc + &quot;\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var constName = info.getItems().get(i).getName();//常量ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sb.append(&quot;\t//错误：常量ID为[&quot;+constName+&quot;]的用户常量引用[&quot;+refId+&quot;]不存在\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;errorLogInfo.append(&quot;错误：常量ID为[&quot;+constName+&quot;]的用户常量引用[&quot;+refId+&quot;]不存在\n&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}catch(e){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exception = &quot;true&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;"/>
  <root/>
</metadata:ConstantList>
